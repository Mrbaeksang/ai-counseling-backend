name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: JDK 21 설정
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Gradle 캐시
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Gradle 권한 설정
      run: chmod +x gradlew
    
    - name: ktlint 스타일 체크
      run: ./gradlew ktlintCheck
    
    - name: detekt 정적 분석
      run: ./gradlew detekt
    
    - name: detekt 리포트 업로드
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: detekt-report
        path: build/reports/detekt/

  test:
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
    - uses: actions/checkout@v4
    
    - name: JDK 21 설정
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Gradle 캐시
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Gradle 권한 설정
      run: chmod +x gradlew
    
    - name: 테스트 실행
      run: ./gradlew test
      env:
        SPRING_PROFILES_ACTIVE: test
        OPENROUTER_API_KEY: test-api-key
        JWT_SECRET: test-jwt-secret-key-for-jwt-authentication-that-is-at-least-256-bits-long-for-security-requirements-2025
    
    # - name: 코드 커버리지 체크 (나중에 Jacoco 추가)
    #   run: ./gradlew jacocoTestCoverageVerification
    #   continue-on-error: true
    
    - name: 테스트 리포트 업로드
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports
        path: |
          build/reports/tests/
          build/reports/jacoco/
    
    - name: 빌드
      run: ./gradlew build -x test
    
    - name: JAR 아티팩트 업로드
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: build/libs/*.jar

  # 나중에 PostgreSQL + Redis 필요할 때 추가
  # integration-test:
  #   runs-on: ubuntu-latest
  #   services:
  #     postgres:
  #       image: postgres:16
  #     redis:
  #       image: redis:7