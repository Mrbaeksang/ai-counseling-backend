spring:
  application:
    name: ai-counseling-app
  profiles:
    active: dev  # 기본 프로파일

  jpa:
    open-in-view: false  # 성능 최적화

  cache:
    type: redis

  data:
    redis:
      url: ${REDIS_URL:}

  ai:
    openai:
      base-url: https://openrouter.ai/api
      api-key: ${OPENROUTER_API_KEY}
      chat:
        options:
          model: ${OPENROUTER_MODEL:openai/gpt-oss-120b}
          temperature: 0.7

  security:
    user:
      name: admin
      password: admin  # 개발용 임시
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - openid
              - profile
              - email
#          kakao:
#            client-id: ${KAKAO_CLIENT_ID:}
#            client-secret: ${KAKAO_CLIENT_SECRET:}
#            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
#            authorization-grant-type: authorization_code
#            client-authentication-method: client_secret_post
#            scope:
#              - profile_nickname
#              - account_email
#          naver:
#            client-id: ${NAVER_CLIENT_ID:}
#            client-secret: ${NAVER_CLIENT_SECRET:}
#            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
#            authorization-grant-type: authorization_code
#            scope:
#              - name
#              - email
#        provider:
#          kakao:
#            authorization-uri: https://kauth.kakao.com/oauth/authorize
#            token-uri: https://kauth.kakao.com/oauth/token
#            user-info-uri: https://kapi.kakao.com/v2/user/me
#            user-name-attribute: id
#          naver:
#            authorization-uri: https://nid.naver.com/oauth2.0/authorize
#            token-uri: https://nid.naver.com/oauth2.0/token
#            user-info-uri: https://openapi.naver.com/v1/nid/me
#            user-name-attribute: response

# Actuator 설정 (헬스체크)
management:
  endpoints:
    web:
      exposure:
        include: health, info
      base-path: /actuator
  endpoint:
    health:
      show-details: always

# 로깅 설정
logging:
  level:
    root: INFO
    com.aicounseling: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# OAuth2 설정
oauth2:
  google:
    client-id: ${GOOGLE_CLIENT_ID}
    client-secret: ${GOOGLE_CLIENT_SECRET}
  kakao:
    client-id: ${KAKAO_CLIENT_ID}

# JWT 설정
jwt:
  secret: ${JWT_SECRET}
  expiration: 86400000  # 24시간 (밀리초)
  refresh-expiration: 604800000  # 7일

# SpringDoc OpenAPI 설정
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    try-it-out-enabled: true
    filter: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

# 서버 설정
server:
  port: 8080
  address: 0.0.0.0  # 모든 네트워크 인터페이스에서 수신
  error:
    include-message: always
    include-stacktrace: never
