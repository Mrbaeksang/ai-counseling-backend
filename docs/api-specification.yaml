openapi: 3.0.3
info:
  title: AI Counseling App API
  description: Spring Boot 기반 AI 상담 서비스 REST API
  version: 1.2.0
  contact:
    name: AI Counseling App
    email: support@aicounseling.app
servers:
  - url: http://localhost:8080/api
    description: 개발 서버
  - url: https://api.aicounseling.app/api
    description: 운영 서버
tags:
  - name: auth
    description: 인증 및 토큰 관리
  - name: users
    description: 사용자 계정
  - name: counselors
    description: 상담 캐릭터(legacy 경로 유지)
  - name: sessions
    description: 상담 세션 및 메시지
  - name: reports
    description: 메시지 신고 (2025 Q4 롤아웃 예정)

paths:
  /auth/login/google:
    post:
      tags: [auth]
      summary: Google OAuth 로그인
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthLoginRequest'
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataAuthResponse'
        '401':
          description: OAuth 토큰 검증 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
  /auth/login/kakao:
    post:
      tags: [auth]
      summary: Kakao OAuth 로그인
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthLoginRequest'
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataAuthResponse'
        '401':
          description: OAuth 토큰 검증 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'

  /auth/refresh:
    post:
      tags: [auth]
      summary: Refresh 토큰으로 JWT 재발급
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: 토큰 재발급 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataAuthResponse'
        '401':
          description: Refresh 토큰이 유효하지 않음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
  /users/me:
    get:
      tags: [users]
      summary: 내 프로필 조회
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 프로필 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataUserProfile'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
    delete:
      tags: [users]
      summary: 회원 탈퇴
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 탈퇴 완료 (결과 코드 S-204)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'

  /users/nickname:
    patch:
      tags: [users]
      summary: 닉네임 변경
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NicknameUpdateRequest'
      responses:
        '200':
          description: 닉네임 변경 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataUserProfile'
        '400':
          description: 유효하지 않은 닉네임
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
  /counselors:
    get:
      tags: [counselors]
      summary: 상담 캐릭터 목록 조회
      parameters:
        - name: sort
          in: query
          description: 정렬 기준 (기본값 recent)
          schema:
            type: string
            enum: [popular, rating, recent]
            default: recent
        - name: page
          in: query
          description: 1부터 시작하는 페이지 번호
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: size
          in: query
          description: 페이지 크기 (1~100)
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: 상담 캐릭터 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataPagedCharacterList'

  /counselors/{id}:
    get:
      tags: [counselors]
      summary: 상담 캐릭터 상세 정보
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 상담 캐릭터 상세 정보 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataCharacterDetail'
        '404':
          description: 상담사를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
  /counselors/favorites:
    get:
      tags: [counselors]
      summary: 즐겨찾기 상담 캐릭터 목록
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: 1부터 시작하는 페이지 번호
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: size
          in: query
          description: 페이지 크기 (1~100)
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: 즐겨찾기 상담 캐릭터 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataPagedFavoriteCharacter'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'

  /counselors/{id}/favorite:
    post:
      tags: [counselors]
      summary: 상담 캐릭터 즐겨찾기 추가
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 즐겨찾기 추가 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataSimpleMessage'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
        '404':
          description: 대상 상담사 또는 사용자 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
        '409':
          description: 이미 즐겨찾기된 상담사
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
    delete:
      tags: [counselors]
      summary: 상담 캐릭터 즐겨찾기 제거
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 즐겨찾기 제거 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataSimpleMessage'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
        '404':
          description: 즐겨찾기하지 않은 상담 캐릭터
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
  /sessions:
    get:
      tags: [sessions]
      summary: 내 상담 세션 목록 조회
      security:
        - bearerAuth: []
      parameters:
        - name: bookmarked
          in: query
          description: 북마크된 세션만 조회
          schema:
            type: boolean
        - name: isClosed
          in: query
          description: 종료 여부 필터 (true=종료, false=진행 중)
          schema:
            type: boolean
        - name: page
          in: query
          description: 0부터 시작하는 페이지 번호
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: size
          in: query
          description: 페이지 크기 (1~100)
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: 세션 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataPagedSessionList'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
    post:
      tags: [sessions]
      summary: 새 상담 세션 시작
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
      responses:
        '200':
          description: 세션 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataCreateSession'
        '400':
          description: 유효하지 않은 상담사 ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'

  /sessions/{sessionId}:
    delete:
      tags: [sessions]
      summary: 상담 세션 종료
      security:
        - bearerAuth: []
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 세션 종료 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
        '400':
          description: 이미 종료된 세션
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
        '404':
          description: 세션을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
  /sessions/{sessionId}/messages:
    get:
      tags: [sessions]
      summary: 세션 메시지 목록 조회
      security:
        - bearerAuth: []
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: 0부터 시작하는 페이지 번호
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: size
          in: query
          description: 페이지 크기 (1~100)
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: 메시지 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataPagedMessages'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
        '404':
          description: 세션을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
    post:
      tags: [sessions]
      summary: 메시지 전송 및 AI 응답
      security:
        - bearerAuth: []
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
      responses:
        '200':
          description: 메시지 전송 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataSendMessage'
        '400':
          description: 메시지 내용 오류 또는 종료된 세션
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'

  /sessions/{sessionId}/messages/{messageId}/report:
    post:
      tags: [reports]
      summary: 메시지 신고
      description: 특정 세션 내 메시지에 대해 스팸/혐오 등 사유로 신고를 접수합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: integer
        - name: messageId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageReportRequest'
      responses:
        '200':
          description: 신고가 정상 접수됨
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataMessageReport'
        '400':
          description: 잘못된 세션/메시지 또는 허용되지 않은 사유 코드
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
        '404':
          description: 세션 또는 메시지를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'

  /sessions/{sessionId}/rate:
    post:
      tags: [sessions]
      summary: 세션 평가 등록
      security:
        - bearerAuth: []
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateSessionRequest'
      responses:
        '200':
          description: 평가 등록 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataSimpleMessage'
        '400':
          description: 이미 평가된 세션 또는 진행 중인 세션
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'

  /sessions/{sessionId}/bookmark:
    patch:
      tags: [sessions]
      summary: 세션 북마크 토글
      security:
        - bearerAuth: []
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 북마크 상태 변경 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataToggleBookmark'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
        '404':
          description: 세션을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'

  /sessions/{sessionId}/title:
    patch:
      tags: [sessions]
      summary: 세션 제목 수정
      security:
        - bearerAuth: []
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSessionTitleRequest'
      responses:
        '200':
          description: 세션 제목 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
        '400':
          description: 유효하지 않은 제목 길이
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
        '401':
          description: 인증 필요
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
        '404':
          description: 세션을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RsDataEmpty'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    OAuthLoginRequest:
      type: object
      required: [token]
      properties:
        token:
          type: string
          description: OAuth 공급자가 발급한 액세스 토큰
          example: ya29.a0AfH6SMD...
    RefreshTokenRequest:
      type: object
      required: [refreshToken]
      properties:
        refreshToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        userId:
          type: integer
          format: int64
        email:
          type: string
          format: email
        nickname:
          type: string
    RsDataAuthResponse:
      type: object
      properties:
        resultCode:
          type: string
          example: S-1
        msg:
          type: string
          example: 구글 로그인 성공
        data:
          $ref: '#/components/schemas/AuthResponse'
    UserProfileResponse:
      type: object
      properties:
        email:
          type: string
          format: email
        nickname:
          type: string
        profileImageUrl:
          type: string
          nullable: true
        authProvider:
          type: string
          example: GOOGLE
        memberSince:
          type: string
          format: date
    NicknameUpdateRequest:
      type: object
      required: [nickname]
      properties:
        nickname:
          type: string
          minLength: 2
          maxLength: 20
    RsDataUserProfile:
      type: object
      properties:
        resultCode:
          type: string
          example: S-1
        msg:
          type: string
          example: 프로필 조회 성공
        data:
          $ref: '#/components/schemas/UserProfileResponse'
    RsDataEmpty:
      type: object
      properties:
        resultCode:
          type: string
          example: F-401
        msg:
          type: string
          example: 로그인이 필요합니다
        data:
          nullable: true
          example: null
    CharacterListResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        title:
          type: string
        avatarUrl:
          type: string
          nullable: true
        categories:
          type: string
          nullable: true
          example: self,emotion
        averageRating:
          type: integer
          example: 4
          description: 1~10 범위의 평균 평점
        totalSessions:
          type: integer
        isFavorite:
          type: boolean
          description: 로그인 사용자가 즐겨찾기했는지 여부
    CharacterDetailResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        title:
          type: string
        description:
          type: string
        avatarUrl:
          type: string
          nullable: true
        categories:
          type: string
          nullable: true
        averageRating:
          type: integer
        totalSessions:
          type: integer
        totalRatings:
          type: integer
        isFavorite:
          type: boolean
          description: 로그인 사용자가 즐겨찾기했는지 여부
    FavoriteCharacterResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        title:
          type: string
        avatarUrl:
          type: string
          nullable: true
        averageRating:
          type: integer
    PageInfo:
      type: object
      properties:
        currentPage:
          type: integer
        totalPages:
          type: integer
        pageSize:
          type: integer
        totalElements:
          type: integer
          format: int64
        hasNext:
          type: boolean
        hasPrevious:
          type: boolean
        isFirst:
          type: boolean
        isLast:
          type: boolean
    PagedCharacterList:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/CharacterListResponse'
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
    PagedFavoriteCharacterList:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/FavoriteCharacterResponse'
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
    RsDataPagedCharacterList:
      type: object
      properties:
        resultCode:
          type: string
          example: S-1
        msg:
          type: string
          example: 상담 캐릭터 목록 조회 성공
        data:
          $ref: '#/components/schemas/PagedCharacterList'
    RsDataCharacterDetail:
      type: object
      properties:
        resultCode:
          type: string
          example: S-1
        msg:
          type: string
          example: 상담 캐릭터 정보 조회 성공
        data:
          $ref: '#/components/schemas/CharacterDetailResponse'
    RsDataPagedFavoriteCharacter:
      type: object
      properties:
        resultCode:
          type: string
          example: S-1
        msg:
          type: string
          example: 즐겨찾기 목록 조회 성공
        data:
          $ref: '#/components/schemas/PagedFavoriteCharacterList'
    RsDataSimpleMessage:
      type: object
      properties:
        resultCode:
          type: string
          example: S-1
        msg:
          type: string
          example: 즐겨찾기가 추가되었습니다
        data:
          type: string
          nullable: true
          example: 즐겨찾기 추가 성공
    CreateSessionRequest:
      type: object
      required: [counselorId]
      properties:
        counselorId:
          type: integer
          format: int64
    CreateSessionResponse:
      type: object
      properties:
        sessionId:
          type: integer
          format: int64
        counselorId:
          type: integer
          format: int64
        counselorName:
          type: string
        title:
          type: string
        avatarUrl:
          type: string
          nullable: true
    RsDataCreateSession:
      type: object
      properties:
        resultCode:
          type: string
          example: S-1
        msg:
          type: string
          example: 세션 시작 성공
        data:
          $ref: '#/components/schemas/CreateSessionResponse'
    SessionListResponse:
      type: object
      properties:
        sessionId:
          type: integer
          format: int64
        counselorId:
          type: integer
          format: int64
        title:
          type: string
        counselorName:
          type: string
        lastMessageAt:
          type: string
          format: date-time
        isBookmarked:
          type: boolean
        avatarUrl:
          type: string
          nullable: true
        closedAt:
          type: string
          format: date-time
          nullable: true
    PagedSessionList:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/SessionListResponse'
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
    RsDataPagedSessionList:
      type: object
      properties:
        resultCode:
          type: string
          example: S-1
        msg:
          type: string
          example: 세션 목록 조회 성공
        data:
          $ref: '#/components/schemas/PagedSessionList'
    SendMessageRequest:
      type: object
      required: [content]
      properties:
        content:
          type: string
          maxLength: 1000
    MessageItem:
      type: object
      properties:
        messageId:
          type: integer
          format: int64
        content:
          type: string
        senderType:
          type: string
          enum: [USER, AI]
        createdAt:
          type: string
          format: date-time
    SendMessageResponse:
      type: object
      properties:
        userMessageId:
          type: integer
          format: int64
        userMessage:
          type: string
        aiMessageId:
          type: integer
          format: int64
        aiMessage:
          type: string
        sessionTitle:
          type: string
          nullable: true
        isSessionEnded:
          type: boolean
    PagedMessageList:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/MessageItem'
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
    RsDataSendMessage:
      type: object
      properties:
        resultCode:
          type: string
          example: S-1
        msg:
          type: string
          example: 메시지 전송 성공
        data:
          $ref: '#/components/schemas/SendMessageResponse'
    RsDataPagedMessages:
      type: object
      properties:
        resultCode:
          type: string
          example: S-1
        msg:
          type: string
          example: 메시지 조회 성공
        data:
          $ref: '#/components/schemas/PagedMessageList'
    MessageReportRequest:
      type: object
      required: [reasonCode]
      properties:
        reasonCode:
          type: string
          description: 신고 사유 코드
          enum: [HARASSMENT, SELF_HARM, HATE_SPEECH, MISINFORMATION, SPAM, OTHER]
        detail:
          type: string
          maxLength: 2000
          nullable: true
          description: 추가 설명 (선택)
    MessageReportResponse:
      type: object
      properties:
        reportId:
          type: integer
          format: int64
        sessionId:
          type: integer
          format: int64
        messageId:
          type: integer
          format: int64
        reasonCode:
          type: string
          enum: [HARASSMENT, SELF_HARM, HATE_SPEECH, MISINFORMATION, SPAM, OTHER]
        detail:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
    RsDataMessageReport:
      type: object
      properties:
        resultCode:
          type: string
          example: S-1
        msg:
          type: string
          example: 메시지 신고가 접수되었습니다
        data:
          $ref: '#/components/schemas/MessageReportResponse'
    RateSessionRequest:
      type: object
      required: [rating]
      properties:
        rating:
          type: integer
          minimum: 1
          maximum: 10
        feedback:
          type: string
          maxLength: 500
          nullable: true
    UpdateSessionTitleRequest:
      type: object
      required: [title]
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 15
    ToggleBookmarkResponse:
      type: object
      properties:
        sessionId:
          type: integer
          format: int64
        isBookmarked:
          type: boolean
    RsDataToggleBookmark:
      type: object
      properties:
        resultCode:
          type: string
          example: S-1
        msg:
          type: string
          example: 북마크 추가 성공
        data:
          $ref: '#/components/schemas/ToggleBookmarkResponse'
